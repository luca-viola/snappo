#!/usr/bin/env python3
import os
import re
import PIL
import argparse
from PIL import Image


def main(version):
    parser = argparse.ArgumentParser()
    parser.add_argument('-v', '--version', action='version', version='%(prog)s Ver: '+version)
    parser.add_argument('-g', '--geometry', metavar=' WxH+OffX+OffY', required=True, help='specify width, height, offset x and y inside the image in format WxH+OffX+OffY' )
    parser.add_argument('-i', '--image', metavar='/path/to/source/image', required=True, help='path to the source image')
    parser.add_argument('output', help='path to output image')
    args = parser.parse_args()
    #print(args.image)
    m = re.compile('([0-9]*)x([0-9]*)\+([0-9]*)\+([0-9]*)')
    p = m.match(args.geometry)
    if p is None:
        print("Wrong geometry format. Please use WxH+OffX+OffY, e.g 1920x1080+200+300")
    else:
        W=int(p.group(1))
        H=int(p.group(2))
        X=int(p.group(3))
        Y=int(p.group(4))
        im = Image.open(args.image)
        if im is not None:
            im_crop = im.crop((X, Y, X+W, Y+H))
            im_crop.save(args.output, format='png')
        else:
             print("File "+args.image+" not found or nor readbale.")

if __name__== "__main__":
    version = ""
    with open(os.path.dirname(__file__)+'/../VERSION', 'r') as f:
        version=f.read()
    f.close()
    main(version)